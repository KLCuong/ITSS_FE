import React, { useState, useEffect } from 'react';
import { Button, Typography } from 'antd';
import { useNavigate } from 'react-router-dom';
import SurveyDialog from "../../components/survey_dialog"; // ƒê·∫£m b·∫£o b·∫°n ƒë√£ t·∫°o component n√†y
import SearchBar from '../../components/searchbar';
import ButtonText from '../../components/buttontext';
import File_Container from '../../components/file_container';
import LoadingScreen from '../../components/loading';
import ErrorScreen from '../../components/error_screen';

import './homepage.css';

const { Title, Text } = Typography;

const Homepage = () => {
  const navigate = useNavigate();

  const [showDialog, setShowDialog] = useState(true); // üëà Hi·ªÉn th·ªã dialog khi m·ªü app

  const handleSaveSurvey = (data) => {
    console.log("Th√¥ng tin ng∆∞·ªùi d√πng:", data);
    setShowDialog(false); // ·∫®n dialog sau khi l∆∞u
  };

  const buttonItems = [
    "T√ÄI LI·ªÜU B√ÅCH KHOA",
    "KH√ìA H·ªåC",
    "PH·∫¶N M·ªÄM",
    "T√ÄI LI·ªÜU NEU",
    "IELTS",
    "TOEIC"
  ];

  const documentList = [
    {
      nganh: "Vi·ªán Kinh T·∫ø V√† Qu·∫£n L√Ω",
      title: "T√†i li·ªáu m√¥n ƒê·∫°o ƒë·ª©c kinh doanh",
      date: "13/11/2024",
    },
    {
      nganh: "Khoa C√¥ng Ngh·ªá Th√¥ng Tin",
      title: "B√†i gi·∫£ng m√¥n C·∫•u tr√∫c d·ªØ li·ªáu",
      date: "10/10/2024",
    },
    {
      nganh: "Khoa ƒêi·ªán T·ª≠ Vi·ªÖn Th√¥ng",
      title: "T√†i li·ªáu m√¥n M·∫°ch ƒêi·ªán",
      date: "01/12/2024",
    },
    {
      nganh: "Vi·ªán Ngo·∫°i Ng·ªØ",
      title: "Gi√°o tr√¨nh Ti·∫øng Anh Th∆∞∆°ng M·∫°i",
      date: "20/09/2024",
    },
    {
      nganh: "Khoa X√¢y D·ª±ng",
      title: "B√†i gi·∫£ng m√¥n V·∫≠t li·ªáu x√¢y d·ª±ng",
      date: "05/11/2024",
    },
    {
      nganh: "Vi·ªán Khoa H·ªçc T·ª± Nhi√™n",
      title: "T√†i li·ªáu m√¥n H√≥a h·ªçc ƒë·∫°i c∆∞∆°ng",
      date: "15/10/2024",
    },
  ];

  const [isError, setIsError] = useState(false);

  useEffect(() => {
    if (documentList.length <= 0) {
      const timer = setTimeout(() => {
        setIsError(true);
      }, 20000);

      return () => clearTimeout(timer);
    } else {
      setIsError(false);
    }
  }, [documentList]);

  const handleRetry = () => {
    setIsError(false);
    // TODO: th√™m logic t·∫£i l·∫°i d·ªØ li·ªáu n·∫øu g·ªçi API
  };

  return (
    <div className="homepage-container">
      {/* Hi·ªÉn th·ªã Dialog */}
        <SurveyDialog
          visible={showDialog}
          onClose={() => setShowDialog(false)}
          onSave={handleSaveSurvey}
        />
      <div className="homepage-background">
        <div className="homepage-text-container">
          <h1 className="homepage-centered-text">
            Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi trang web!
          </h1>
        </div>

        {/* Thanh T√¨m ki·∫øm */}
        <SearchBar />
        
        {/* C√°c n√∫t category */}
        <div className="homepage-category-container">
          <h2 className="category-centered-text">C√≥ th·ªÉ b·∫°n quan t√¢m</h2>
          <div className="button-section">
            {buttonItems.map((item, index) => (
              <ButtonText
                key={index}
                title={item}
                onClick={() => console.log(`${item} clicked`)}
              />
            ))}
          </div>
        </div>

        <div className={`white-section ${documentList.length <= 0 ? "white-section--small" : ""}`}>
          <h2 className="section-title-text">T√¨m ki·∫øm ph·ªï bi·∫øn</h2>
          <div className="custom-underline"></div>
          <div className="document-list">
            {documentList.length <= 0 ? (
              isError ? (
                <ErrorScreen
                  message="Kh√¥ng th·ªÉ t·∫£i t√†i li·ªáu. Vui l√≤ng th·ª≠ l·∫°i."
                  onRetry={handleRetry}
                />
              ) : (
                <LoadingScreen />
              )
            ) : (
              documentList.map((doc, idx) => (
                <File_Container
                  key={idx}
                  nganh={doc.nganh}
                  title={doc.title}
                  date={doc.date}
                  onClick={() => navigate('/docdetail')}
                />
              ))
            )}
          </div>
        </div>
      </div>
    </div>
  );
};

export default Homepage;
